from trident.patch_encoder_models.load import (
    encoder_registry,
    encoder_factory,
    CustomInferenceEncoder,
    MuskInferenceEncoder,
    Conchv1InferenceEncoder,
    CTransPathInferenceEncoder,
    PhikonInferenceEncoder,
    ResNet50InferenceEncoder,
    UNIInferenceEncoder,
    UNIv2InferenceEncoder,
    GigaPathInferenceEncoder,
    VirchowInferenceEncoder,
    Virchow2InferenceEncoder,
    HOptimus0InferenceEncoder,
    HOptimus1InferenceEncoder,
    Conchv15InferenceEncoder,
    Phikonv2InferenceEncoder,
    LunitS8InferenceEncoder,
    HibouLInferenceEncoder,
    KaikoB16InferenceEncoder,
    KaikoB8InferenceEncoder,
    KaikoS16InferenceEncoder,
    KaikoS8InferenceEncoder,
    KaikoL14InferenceEncoder,
    Midnight12kInferenceEncoder,
)

__all__ = [
    "encoder_registry",
    "encoder_factory",
    "CustomInferenceEncoder",
    "MuskInferenceEncoder",
    "Conchv1InferenceEncoder",
    "CTransPathInferenceEncoder",
    "PhikonInferenceEncoder",
    "ResNet50InferenceEncoder",
    "UNIInferenceEncoder",
    "UNIv2InferenceEncoder",
    "GigaPathInferenceEncoder",
    "VirchowInferenceEncoder",
    "Virchow2InferenceEncoder",
    "HOptimus0InferenceEncoder",
    "HOptimus1InferenceEncoder",
    "Conchv15InferenceEncoder",
    "Phikonv2InferenceEncoder",
    "LunitS8InferenceEncoder",
    "HibouLInferenceEncoder",
    "KaikoB16InferenceEncoder",
    "KaikoB8InferenceEncoder",
    "KaikoS16InferenceEncoder",
    "KaikoS8InferenceEncoder",
    "KaikoL14InferenceEncoder",
    "Midnight12kInferenceEncoder",
]
